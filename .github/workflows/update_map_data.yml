# Copyright Â© 2025 Aaro Koinsaari
# Licensed under the Apache License, Version 2.0
# http://www.apache.org/licenses/LICENSE-2.0

name: Update Map Data

on:
  schedule:
    # Run every Monday at 3:00 AM UTC
    - cron: '0 3 * * 1'
  workflow_dispatch:
    inputs:
      region_switzerland:
        description: 'Update Switzerland'
        type: boolean
        default: false
        required: false
      region_finland:
        description: 'Update Finland'
        type: boolean
        default: false
        required: false
      test_mode:
        description: 'Test mode, only process 100 places per region'
        type: boolean
        default: false
        required: false
      overwrite:
        description: 'Force overwrite all places, including user-modified ones'
        type: boolean
        default: false
        required: false

concurrency:
  group: data-update
  cancel-in-progress: false

jobs:
  update-data:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build container
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          load: true
          tags: map-data-updater:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Ensure script is executable
        run: chmod +x ./backend/scripts/run-update.sh

      - name: Run data update
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          REGIONS: ${{ (github.event.inputs.region_switzerland == 'true' && 'switzerland,') || '' }}${{ (github.event.inputs.region_finland == 'true' && 'finland') || '' }}
          OVERWRITE: ${{ github.event.inputs.overwrite }}
          TEST_MODE: ${{ github.event.inputs.test_mode }}
        run: ./backend/scripts/run-update.sh

      - name: List generated CSV files
        run: ls -la ./backend/data/

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Commit and push updated data files
        run: |
          mkdir -p ./data
          cp ./backend/data/*.csv ./data/
          git add ./data/*.csv
          git commit -m "Update accessibility data [automated]" || echo "No changes to commit"
          git push

      - name: Upload run logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: update-logs-${{ github.run_id }}
          path: ./backend/data/*.log
          retention-days: 30

      - name: Notify on failure
        if: failure()
        run: echo "::error::Data update workflow failed. See logs at https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
